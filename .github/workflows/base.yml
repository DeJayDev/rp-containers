name: Base Image Build and Release

on:
  push:
    paths:
      - '**/docker-bake.hcl'
      - '.github/workflows/**'

jobs:
  build:
    runs-on: "blacksmith-4vcpu-ubuntu-2204"

    permissions:
      packages: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: useblacksmith/build-push-action@v1.1
        with:
          setup-only: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Determine if this is a production build
        id: build_type
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "is_production=true" >> $GITHUB_OUTPUT
          else
            echo "is_production=false" >> $GITHUB_OUTPUT
          fi

      - name: Get changed docker-bake.hcl files
        id: changed_files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            **/docker-bake.hcl

      - name: Define dev release name 
        if: steps.build_type.outputs.is_production != 'true'
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF##refs/heads/} | sed 's/\//-/g')
          echo "RELEASE=dev-${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Convert changed files to CSV format
        if: steps.changed_files.outputs.any_changed == 'true'
        id: changed_files_csv
        run: |
          echo "files=${{ steps.changed_files.outputs.all_changed_files }}" | tr ' ' ',' >> $GITHUB_OUTPUT

      - name: Build and push images
        if: steps.changed_files.outputs.any_changed == 'true'
        uses: docker/bake-action@v6
        env:
          BUILDX_BAKE_ENTITLEMENTS_FS: 0
        with:
          source: .
          files: ${{ steps.changed_files_csv.outputs.files }}
          push: true
          set: |
            ${{ steps.build_type.outputs.is_production != 'true' && format('*.args.RELEASE={0}', env.RELEASE) || '' }}
            *.args.GITHUB_WORKSPACE=${{ github.workspace }}
